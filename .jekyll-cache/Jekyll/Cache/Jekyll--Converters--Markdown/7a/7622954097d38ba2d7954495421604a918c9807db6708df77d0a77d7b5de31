I"± <h1 id="dillinger">Dillinger</h1>
<h2 id="the-last-markdown-editor-ever"><em>The Last Markdown Editor, Ever</em></h2>

<table>
  <tbody>
    <tr>
      <td>[![N</td>
      <td>Solid](https://cldup.com/dTxpPi9lDf.thumb.png)](https://nodesource.com/products/nsolid)</td>
    </tr>
  </tbody>
</table>

<p><a href="https://travis-ci.org/joemccann/dillinger"><img src="https://travis-ci.org/joemccann/dillinger.svg?branch=master" alt="Build Status" /></a></p>

<p>Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible,
AngularJS-powered HTML5 Markdown editor.</p>

<ul>
  <li>Type some Markdown on the left</li>
  <li>See HTML in the right</li>
  <li>âœ¨Magic âœ¨</li>
</ul>

<h2 id="features">Features</h2>

<ul>
  <li>Import a HTML file and watch it magically convert to Markdown</li>
  <li>Drag and drop images (requires your Dropbox account be linked)</li>
  <li>Import and save files from GitHub, Dropbox, Google Drive and One Drive</li>
  <li>Drag and drop markdown and HTML files into Dillinger</li>
  <li>Export documents as Markdown, HTML and PDF</li>
</ul>

<p>Markdown is a lightweight markup language based on the formatting conventions
that people naturally use in email.
As <a href="http://daringfireball.net">John Gruber</a> writes on the <a href="http://daringfireball.net/projects/markdown/">Markdown site</a></p>

<blockquote>
  <p>The overriding design goal for Markdownâ€™s
formatting syntax is to make it as readable
as possible. The idea is that a
Markdown-formatted document should be
publishable as-is, as plain text, without
looking like itâ€™s been marked up with tags
or formatting instructions.</p>
</blockquote>

<p>This text you see here is *actually- written in Markdown! To get a feel
for Markdownâ€™s syntax, type some text into the left window and
watch the results in the right.</p>

<h2 id="tech">Tech</h2>

<p>Dillinger uses a number of open source projects to work properly:</p>

<ul>
  <li><a href="http://angularjs.org">AngularJS</a> - HTML enhanced for web apps!</li>
  <li><a href="http://ace.ajax.org">Ace Editor</a> - awesome web-based text editor</li>
  <li><a href="https://github.com/markdown-it/markdown-it">markdown-it</a> - Markdown parser done right. Fast and easy to extend.</li>
  <li><a href="http://twitter.github.com/bootstrap/">Twitter Bootstrap</a> - great UI boilerplate for modern web apps</li>
  <li><a href="http://nodejs.org">node.js</a> - evented I/O for the backend</li>
  <li><a href="http://expressjs.com">Express</a> - fast node.js network app framework <a href="http://twitter.com/tjholowaychuk">@tjholowaychuk</a></li>
  <li><a href="http://gulpjs.com">Gulp</a> - the streaming build system</li>
  <li><a href="https://breakdance.github.io/breakdance/">Breakdance</a> - HTML
to Markdown converter</li>
  <li><a href="http://jquery.com">jQuery</a> - duh</li>
</ul>

<p>And of course Dillinger itself is open source with a <a href="https://github.com/joemccann/dillinger">public repository</a>
 on GitHub.</p>

<h2 id="installation">Installation</h2>

<p>Dillinger requires <a href="https://nodejs.org/">Node.js</a> v10+ to run.</p>

<p>Install the dependencies and devDependencies and start the server.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>dillinger
npm i
node app
</code></pre></div></div>

<p>For production environmentsâ€¦</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">--production</span>
<span class="nv">NODE_ENV</span><span class="o">=</span>production node app
</code></pre></div></div>

<h2 id="plugins">Plugins</h2>

<p>Dillinger is currently extended with the following plugins.
Instructions on how to use them in your own application are linked below.</p>

<table>
  <thead>
    <tr>
      <th>Plugin</th>
      <th>README</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Dropbox</td>
      <td><a href="https://github.com/joemccann/dillinger/tree/master/plugins/dropbox/README.md">plugins/dropbox/README.md</a></td>
    </tr>
    <tr>
      <td>GitHub</td>
      <td><a href="https://github.com/joemccann/dillinger/tree/master/plugins/github/README.md">plugins/github/README.md</a></td>
    </tr>
    <tr>
      <td>Google Drive</td>
      <td><a href="https://github.com/joemccann/dillinger/tree/master/plugins/googledrive/README.md">plugins/googledrive/README.md</a></td>
    </tr>
    <tr>
      <td>OneDrive</td>
      <td><a href="https://github.com/joemccann/dillinger/tree/master/plugins/onedrive/README.md">plugins/onedrive/README.md</a></td>
    </tr>
    <tr>
      <td>Medium</td>
      <td><a href="https://github.com/joemccann/dillinger/tree/master/plugins/medium/README.md">plugins/medium/README.md</a></td>
    </tr>
    <tr>
      <td>Google Analytics</td>
      <td><a href="https://github.com/RahulHP/dillinger/blob/master/plugins/googleanalytics/README.md">plugins/googleanalytics/README.md</a></td>
    </tr>
  </tbody>
</table>

<h2 id="development">Development</h2>

<p>Want to contribute? Great!</p>

<p>Dillinger uses Gulp + Webpack for fast developing.
Make a change in your file and instantaneously see your updates!</p>

<p>Open your favorite Terminal and run these commands.</p>

<p>First Tab:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>node app
</code></pre></div></div>

<p>Second Tab:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gulp watch
</code></pre></div></div>

<p>(optional) Third:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>karma <span class="nb">test</span>
</code></pre></div></div>

<h4 id="building-for-source">Building for source</h4>

<p>For production release:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gulp build <span class="nt">--prod</span>
</code></pre></div></div>

<p>Generating pre-built zip archives for distribution:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gulp build dist <span class="nt">--prod</span>
</code></pre></div></div>

<h2 id="docker">Docker</h2>

<p>Dillinger is very easy to install and deploy in a Docker container.</p>

<p>By default, the Docker will expose port 8080, so change this within the
Dockerfile if necessary. When ready, simply use the Dockerfile to
build the image.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>dillinger
docker build <span class="nt">-t</span> &lt;youruser&gt;/dillinger:<span class="k">${</span><span class="nv">package</span><span class="p">.json.version</span><span class="k">}</span> <span class="nb">.</span>
</code></pre></div></div>

<p>This will create the dillinger image and pull in the necessary dependencies.
Be sure to swap out <code class="language-plaintext highlighter-rouge">${package.json.version}</code> with the actual
version of Dillinger.</p>

<p>Once done, run the Docker image and map the port to whatever you wish on
your host. In this example, we simply map port 8000 of the host to
port 8080 of the Docker (or whatever port was exposed in the Dockerfile):</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-d</span> <span class="nt">-p</span> 8000:8080 <span class="nt">--restart</span><span class="o">=</span>always <span class="nt">--cap-add</span><span class="o">=</span>SYS_ADMIN <span class="nt">--name</span><span class="o">=</span>dillinger &lt;youruser&gt;/dillinger:<span class="k">${</span><span class="nv">package</span><span class="p">.json.version</span><span class="k">}</span>
</code></pre></div></div>

<blockquote>
  <p>Note: <code class="language-plaintext highlighter-rouge">--capt-add=SYS-ADMIN</code> is required for PDF rendering.</p>
</blockquote>

<p>Verify the deployment by navigating to your server address in
your preferred browser.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>127.0.0.1:8000
</code></pre></div></div>

<h2 id="license">License</h2>

<p>MIT</p>

<p><strong>Free Software, Hell Yeah!</strong></p>

:ET